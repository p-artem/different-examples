<?php
namespace app\components\helpers\packageWidget;

use yii\base\Component;
/*
 * Компонет инициализатор моделей виджетов.
 * Class Init
 * @package app\components\helpers\packageWidget
 *
 * @param string $widgetInfoTable
 * @param array $_info
 * @param array $_models
 */

class Init extends Component {

    public $widgetInfoTable;
    private $_info;
    private $_models;

    const WIDGETS_MODELS_PATH = 'app\components\helpers\packageWidget\models\\';

    /*
     * Get info for all widgets in database
     */
    public function init()
    {
        $query = "SELECT * FROM {{%" . $this->widgetInfoTable . "}}";
        $data = \Yii::$app->db->createCommand($query)->queryAll();
        foreach ($data as $widget){
            $this->_info[$widget['widget_id']] = $widget;
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    /*
     * @return array $_info
     */
    public function getInfo(){
        return $this->_info;
    }

    /*
    * @return view returned widget
    */
    public function getWidget($id){
        if(array_key_exists($id, $this->_info)){
                return PackageView::widget(['widgetView' => $this->_info[$id]['widget'] . '/backend']);
        }
        return false;
    }

    /*
    * Load all widget models if we in admin panel
    */
   public function loadModels(){
        if(\Yii::$app->controller->id === 'admin'){
            foreach ($this->_info as $dataWidget){
                $class = self::WIDGETS_MODELS_PATH . substr($dataWidget['widget'], 1);
                if(class_exists($class)){
                    $this->_models[$dataWidget['widget_id']] = new $class();
                }
            }
        }
    }

    /*
     * @return widget model by id
     */
    public function getModel($id){
        return (isset($this->_models[$id])) ? $this->_models[$id] : false;
    }
}